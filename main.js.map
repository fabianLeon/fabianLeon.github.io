{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<div class=\\\"container\\\">\\n  <div style=\\\"text-align:center\\\">\\n    <h1>\\n      {{ title }}!\\n    </h1>\\n  </div>\\n  <h2>Suggestion: </h2>\\n  <table class=\\\"table table-dark table-hover table-striped\\\">\\n    <thead class=\\\"thead-light\\\">\\n      <tr>\\n        <th>Check</th>\\n        <th>Info</th>\\n        <th>Suggestion</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let item of items\\\">\\n        <td>\\n          <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"item.checked\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n          </mat-checkbox>\\n        </td>\\n        <td>{{item.message}}\\n        </td>\\n        <td>\\n          <textarea matInput [(ngModel)]=\\\"item.message\\\" cdkTextareaAutosize #autosize=\\\"cdkTextareaAutosize\\\"\\n            cdkAutosizeMinRows=\\\"2\\\" cdkAutosizeMaxRows=\\\"5\\\">\\n                    </textarea>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\" aria-label=\\\"Basic example\\\">\\n    <button type=\\\"button\\\" (click)=\\\"add()\\\" class=\\\"btn btn-secondary\\\">New</button>\\n    <button type=\\\"button\\\" (click)=\\\"remove()\\\" class=\\\"btn btn-secondary\\\">Remove</button>\\n    <button type=\\\"button\\\" (click)=\\\"save()\\\" class=\\\"btn btn-secondary\\\">Save</button>\\n    <button type=\\\"button\\\" (click)=\\\"generate()\\\" class=\\\"btn btn-secondary\\\">Generate</button>\\n  </div>\\n  <hr>\\n  <h5>Text Generated</h5>\\n  <div>\\n    {{generated}}\\n  </div>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\n\n\nexport class AppComponent {\n  title = 'Suggestions';\n  items: any;\n  generated = '';\n\n  constructor() {\n    this.items = [{\n      message: 'is simply dummy text of the printing and typesetting industry. ' +\n        'Lorem Ipsum has been the standard dummy text ever since the 1500s',\n      checked: false,\n    }];\n  }\n\n  save() {\n    localStorage.setItem('items', JSON.stringify(this.items));\n  }\n\n  add() {\n    this.items.push({\n      message: 'is simply dummy text of the printing and typesetting industry. ' +\n        'Lorem Ipsum has been the standard dummy text ever since the 1500s',\n      checked: false,\n    });\n  }\n\n  remove() {\n    console.log(this.items);\n    this.items.pop();\n  }\n\n  generate() {\n    this.generated = '';\n    const checked = this.items.filter((a) => a.checked);\n    checked.forEach(element => {\n      this.generated += element.message;\n    });\n  }\n\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngOnInit(): void {\n    const items = localStorage.getItem('items');\n    if (items === null) {\n      this.save();\n    } else {\n      this.items = JSON.parse(items);\n    }\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport {MatButtonModule, MatCheckboxModule} from '@angular/material';\nimport {MatInputModule} from '@angular/material/input';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    FormsModule,\n    MatInputModule,\n  ],\n  exports: [MatButtonModule, MatCheckboxModule],\n\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}